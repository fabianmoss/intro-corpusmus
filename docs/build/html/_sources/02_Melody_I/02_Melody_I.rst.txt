Folk Songs
==========

.. code:: ipython3

    import pandas as pd
    import music21 as m21
    import numpy as np
    import statsmodels.api as sm
    
    import matplotlib.pyplot as plt
    import matplotlib as mpl
    mpl.rc_context(rc=None, fname="../matplotlibrc")
    
    import seaborn as sns
    sns.set_context("paper")

Melodies
--------

.. code:: ipython3

    # parse all
    corpora = m21.corpus.getComposer('essenFolksong')

.. code:: ipython3

    german_song = m21.converter.parse(corpora[0])[70]
    german_song.show(fmt="musicxml.png", fp="./img/german_song.png")
    german_song.show()



.. image:: output_4_0.png
   :width: 753px
   :height: 286px


.. code:: ipython3

    german_song.show("Midi")

.. code:: ipython3

    chinese_song = songs[6200]
    chinese_song.show(fmt="musicxml.png", fp="./img/chinese_song.png")
    chinese_song.show()



.. image:: output_6_0.png
   :width: 753px
   :height: 286px


.. code:: ipython3

    chinese_song.show("Midi")

.. code:: ipython3

    %%time 
    
    # takes about 2 mins
    
    songs = [s for i in range(len(corpora)) for s in m21.converter.parse(corpora[i]) ]


.. parsed-literal::

    Wall time: 1min 5s
    

.. code:: ipython3

    len(songs)




.. parsed-literal::

    8514



.. code:: ipython3

    print(f"We have {len(songs)} in the whole corpus.")


.. parsed-literal::

    We have 8514 in the whole corpus.
    

.. code:: ipython3

    def note_list(piece):
        l = np.array([ (note.pitch.midi, note.quarterLength) for note in piece.flat.notes ])
        return l
    
    note_list(german_song)[:15]




.. parsed-literal::

    array([[62.,  1.],
           [67.,  2.],
           [71.,  2.],
           [74.,  3.],
           [72.,  1.],
           [71.,  2.],
           [69.,  2.],
           [67.,  2.],
           [62.,  1.],
           [67.,  2.],
           [71.,  2.],
           [74.,  3.],
           [72.,  1.],
           [71.,  2.],
           [69.,  2.]])



.. code:: ipython3

    def get_intervals(notelist):
        
        ints = np.array([ note2 - note1 for note1, note2 in zip(notelist, notelist[1:]) ])
        
        return ints

.. code:: ipython3

    get_intervals(note_list(german_song))[:15]




.. parsed-literal::

    array([[ 5.,  1.],
           [ 4.,  0.],
           [ 3.,  1.],
           [-2., -2.],
           [-1.,  1.],
           [-2.,  0.],
           [-2.,  0.],
           [-5., -1.],
           [ 5.,  1.],
           [ 4.,  0.],
           [ 3.,  1.],
           [-2., -2.],
           [-1.,  1.],
           [-2.,  0.],
           [-2.,  0.]])



.. code:: ipython3

    def plot_melodic_profile(piece, ax=None, c=None, mean=False, Z=False):
        
        if ax == None:
            ax = plt.gca()
        
        notelist = note_list(piece) 
        
        n_notes = len(notelist)
        
        notes = pd.DataFrame(notelist, columns=["Pitch", "Duration"])
        notes["Onset"] = notes["Duration"].cumsum()
        
        x = notes["Onset"] / 4
        y = notes["Pitch"]
        
        if Z:
            x = x / x.max()
            y = (y - y.mean()) / y.std()
    
        ax.set_xlabel("Onset")
        ax.set_ylabel("MIDI Pitch")
        ax.set_title("Melodic Profile")
        ax.step(x,y, c=c)
        
        if mean:
            ax.axhline(y.mean(), c="gray", ls="--")

.. code:: ipython3

    fig, axes = plt.subplots(2,1)
    
    plot_melodic_profile(german_song, ax=axes[0], mean=True)
    plot_melodic_profile(chinese_song, ax=axes[1], c="firebrick", mean=True)
    
    plt.tight_layout()
    plt.savefig("img/melodic_profiles.png")



.. image:: output_15_0.png
   :width: 945px
   :height: 704px


.. code:: ipython3

    def plot_standardized(piece, c=None, ax=None, mean=True):
        
        if ax == None:
            ax = plt.gca()
        
        notelist = note_list(piece) 
        
        n_notes = len(notelist)
        
        notes = pd.DataFrame(notelist, columns=["Pitch", "Duration"])
        notes["Onset"] = notes["Duration"].cumsum()
        
        x = notes["Onset"] / 4
        y = notes["Pitch"]
        
        x = x / x.max()
        y = (y - y.mean()) / y.std()
        
        ax.set_xlabel("Standardized onset")
        ax.set_ylabel("Standardized MIDI Pitch")
        ax.set_title("Standardized Melodic Profile")
        ax.step(x,y, c=c)
        
        if mean:
            ax.axhline(0, c="gray", ls="--")
            
        ax.axvline(.25, c="gray", ls="--")
        ax.axvline(.5, c="gray", ls="--")
        ax.axvline(.75, c="gray", ls="--")

.. code:: ipython3

    plot_standardized(german_song, mean=True)
    plot_standardized(chinese_song, c="firebrick")



.. image:: output_17_0.png
   :width: 847px
   :height: 678px


.. code:: ipython3

    def plot_pitch_distribution(song_id):
        g = sns.distplot(big_df[big_df["song_id"] == song_id]["pitch"])
        
        return g    

.. code:: ipython3

    plot_pitch_distribution(70)
    plot_pitch_distribution(6200)
    plt.show()



.. image:: output_19_0.png
   :width: 834px
   :height: 647px


.. code:: ipython3

    german = big_df[big_df["song_id"] == 70]["pitch"]
    chinese = big_df[big_df["song_id"] == 6200]["pitch"]
    
    german = german - german.mean()
    chinese = chinese - chinese.mean()
    
    german = german / german.std()
    chinese = chinese / chinese.std()
    
    sns.distplot(german)
    sns.distplot(chinese);



.. image:: output_20_0.png
   :width: 821px
   :height: 647px


.. code:: ipython3

    # relative onset
    

.. code:: ipython3

    # Pitch
    
    # mean
    
    # variance / standard dev
    
    # Z transformation of pitch

.. code:: ipython3

    from scipy.stats import norm
    
    g = sns.distplot(big_df["pitch"])
    plt.xlabel("Pitch [semitones]")
    plt.ylabel("Density")
    plt.title("Distribution of pitches")
    plt.show()
    
    # big_df.pitch.plot(kind="kde", rug=True)



.. image:: output_23_0.png
   :width: 876px
   :height: 678px


.. code:: ipython3

    big_df.groupby("song_id")




.. parsed-literal::

    <pandas.core.groupby.generic.DataFrameGroupBy object at 0x0000027001F51220>



.. code:: ipython3

    dfs = []
    
    for i in range(len(songs)):
        df = pd.DataFrame( [(i, note.pitch.midi, note.quarterLength/4) for note in songs[i].flat.notes ], columns=["song_id", "pitch", "duration"])
        df["onset"] = df["duration"].cumsum()
        df["rel_onset"] = df["onset"] / df["onset"].max()
        df["Z_pitch"] = (df["pitch"] - df["pitch"].mean())/df["pitch"].std(ddof=0)
        
        dfs.append(df)
    
    big_df = pd.concat(dfs).reset_index(drop=True)
    big_df.to_csv("data/big_df.csv")
    big_df.shape




.. parsed-literal::

    (450596, 6)



.. code:: ipython3

    big_df.head(10)




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>song_id</th>
          <th>pitch</th>
          <th>duration</th>
          <th>onset</th>
          <th>rel_onset</th>
          <th>Z_pitch</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>0</td>
          <td>67</td>
          <td>0.5</td>
          <td>0.5</td>
          <td>0.013158</td>
          <td>-1.834390</td>
        </tr>
        <tr>
          <th>1</th>
          <td>0</td>
          <td>70</td>
          <td>0.5</td>
          <td>1.0</td>
          <td>0.026316</td>
          <td>-0.748238</td>
        </tr>
        <tr>
          <th>2</th>
          <td>0</td>
          <td>71</td>
          <td>0.5</td>
          <td>1.5</td>
          <td>0.039474</td>
          <td>-0.386187</td>
        </tr>
        <tr>
          <th>3</th>
          <td>0</td>
          <td>72</td>
          <td>0.5</td>
          <td>2.0</td>
          <td>0.052632</td>
          <td>-0.024137</td>
        </tr>
        <tr>
          <th>4</th>
          <td>0</td>
          <td>72</td>
          <td>0.5</td>
          <td>2.5</td>
          <td>0.065789</td>
          <td>-0.024137</td>
        </tr>
        <tr>
          <th>5</th>
          <td>0</td>
          <td>74</td>
          <td>1.0</td>
          <td>3.5</td>
          <td>0.092105</td>
          <td>0.699965</td>
        </tr>
        <tr>
          <th>6</th>
          <td>0</td>
          <td>74</td>
          <td>1.0</td>
          <td>4.5</td>
          <td>0.118421</td>
          <td>0.699965</td>
        </tr>
        <tr>
          <th>7</th>
          <td>0</td>
          <td>74</td>
          <td>1.0</td>
          <td>5.5</td>
          <td>0.144737</td>
          <td>0.699965</td>
        </tr>
        <tr>
          <th>8</th>
          <td>0</td>
          <td>74</td>
          <td>0.5</td>
          <td>6.0</td>
          <td>0.157895</td>
          <td>0.699965</td>
        </tr>
        <tr>
          <th>9</th>
          <td>0</td>
          <td>74</td>
          <td>0.5</td>
          <td>6.5</td>
          <td>0.171053</td>
          <td>0.699965</td>
        </tr>
      </tbody>
    </table>
    </div>



.. code:: ipython3

    big_df.tail(6)




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>song_id</th>
          <th>pitch</th>
          <th>duration</th>
          <th>onset</th>
          <th>rel_onset</th>
          <th>Z_pitch</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>450590</th>
          <td>8513</td>
          <td>72</td>
          <td>0.0625</td>
          <td>7.0625</td>
          <td>0.926230</td>
          <td>0.994447</td>
        </tr>
        <tr>
          <th>450591</th>
          <td>8513</td>
          <td>71</td>
          <td>0.0625</td>
          <td>7.1250</td>
          <td>0.934426</td>
          <td>0.696113</td>
        </tr>
        <tr>
          <th>450592</th>
          <td>8513</td>
          <td>69</td>
          <td>0.0625</td>
          <td>7.1875</td>
          <td>0.942623</td>
          <td>0.099445</td>
        </tr>
        <tr>
          <th>450593</th>
          <td>8513</td>
          <td>73</td>
          <td>0.0625</td>
          <td>7.2500</td>
          <td>0.950820</td>
          <td>1.292781</td>
        </tr>
        <tr>
          <th>450594</th>
          <td>8513</td>
          <td>71</td>
          <td>0.2500</td>
          <td>7.5000</td>
          <td>0.983607</td>
          <td>0.696113</td>
        </tr>
        <tr>
          <th>450595</th>
          <td>8513</td>
          <td>69</td>
          <td>0.1250</td>
          <td>7.6250</td>
          <td>1.000000</td>
          <td>0.099445</td>
        </tr>
      </tbody>
    </table>
    </div>



.. code:: ipython3

    big_df.sample(5)




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>song_id</th>
          <th>pitch</th>
          <th>duration</th>
          <th>onset</th>
          <th>rel_onset</th>
          <th>Z_pitch</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>439013</th>
          <td>8305</td>
          <td>74</td>
          <td>0.250</td>
          <td>10.500</td>
          <td>0.666667</td>
          <td>0.887141</td>
        </tr>
        <tr>
          <th>272430</th>
          <td>5422</td>
          <td>78</td>
          <td>0.125</td>
          <td>7.875</td>
          <td>0.575342</td>
          <td>0.228576</td>
        </tr>
        <tr>
          <th>383437</th>
          <td>7243</td>
          <td>69</td>
          <td>0.125</td>
          <td>0.375</td>
          <td>0.016667</td>
          <td>-0.171936</td>
        </tr>
        <tr>
          <th>398001</th>
          <td>7529</td>
          <td>71</td>
          <td>0.250</td>
          <td>2.250</td>
          <td>0.191489</td>
          <td>1.187626</td>
        </tr>
        <tr>
          <th>79611</th>
          <td>1860</td>
          <td>67</td>
          <td>0.250</td>
          <td>0.750</td>
          <td>0.056604</td>
          <td>-0.034597</td>
        </tr>
      </tbody>
    </table>
    </div>



.. code:: ipython3

    big_df["pitch"].value_counts().sort_index().plot(kind="bar");



.. image:: output_29_0.png
   :width: 924px
   :height: 648px


.. code:: ipython3

    big_df["Z_pitch"].plot(kind="kde");



.. image:: output_30_0.png
   :width: 933px
   :height: 644px


.. code:: ipython3

    big_df["duration"].plot(kind="kde",xlim=(0,1.2));



.. image:: output_31_0.png
   :width: 929px
   :height: 642px


The melodic arc
---------------


.. code:: ipython3

    %%time
    
    fig, ax = plt.subplots()
    plt.xlim(0,1)
    
    grouped = big_df.groupby("song_id")
    
    for i, g in grouped:
        x = g["rel_onset"].values
        y = g["Z_pitch"].values
        ax.plot(x,y, lw=.5, c="tab:red", alpha=1/400)
            
    ax.axvline(.25, lw=1, ls="--", c="gray")
    ax.axvline(.5, lw=1, ls="--", c="gray")
    ax.axvline(.75, lw=1, ls="--", c="gray")
    ax.axhline(0, lw=1, ls="--", c="gray")
    
    lowess = sm.nonparametric.lowess
    big_x = big_df["rel_onset"].values
    big_y = big_df["Z_pitch"].values
    big_z = lowess(big_y, big_x, frac=5/100)
    ax.step(big_z[:,0], big_z[:,1], c="black", lw=2)
    
    plt.title("Melodic arc")
    plt.xlabel("Relative onset")
    plt.ylabel("Pitch deviation")
    
    plt.tight_layout()
    plt.savefig("img/melodic_arc.png")
    plt.show()



.. image:: output_34_0.png
   :width: 884px
   :height: 510px


.. parsed-literal::

    Wall time: 2min 49s
    

Intervals
---------

.. code:: ipython3

    intervals = []
    for i, g in big_df.groupby("song_id"):
        ints = [ p2-p1 for p1, p2 in zip(g.pitch, g.pitch[1:])]
        intervals.append(ints)

.. code:: ipython3

    big_df["mean_pitch"] = 0
    
    for i, group in big_df.groupby("song_id"):
        grp_mean_pitch = int(group["pitch"].mean())
        big_df.loc[big_df["song_id"] == i, "mean_pitch"] = grp_mean_pitch

.. code:: ipython3

    big_df["shifted_pitch"] = big_df["pitch"] - big_df["mean_pitch"]

.. code:: ipython3

    big_df.tail()




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>song_id</th>
          <th>pitch</th>
          <th>duration</th>
          <th>onset</th>
          <th>rel_onset</th>
          <th>Z_pitch</th>
          <th>mean_pitch</th>
          <th>shifted_pitch</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>450591</th>
          <td>8513</td>
          <td>71</td>
          <td>0.0625</td>
          <td>7.1250</td>
          <td>0.934426</td>
          <td>0.696113</td>
          <td>68</td>
          <td>3</td>
        </tr>
        <tr>
          <th>450592</th>
          <td>8513</td>
          <td>69</td>
          <td>0.0625</td>
          <td>7.1875</td>
          <td>0.942623</td>
          <td>0.099445</td>
          <td>68</td>
          <td>1</td>
        </tr>
        <tr>
          <th>450593</th>
          <td>8513</td>
          <td>73</td>
          <td>0.0625</td>
          <td>7.2500</td>
          <td>0.950820</td>
          <td>1.292781</td>
          <td>68</td>
          <td>5</td>
        </tr>
        <tr>
          <th>450594</th>
          <td>8513</td>
          <td>71</td>
          <td>0.2500</td>
          <td>7.5000</td>
          <td>0.983607</td>
          <td>0.696113</td>
          <td>68</td>
          <td>3</td>
        </tr>
        <tr>
          <th>450595</th>
          <td>8513</td>
          <td>69</td>
          <td>0.1250</td>
          <td>7.6250</td>
          <td>1.000000</td>
          <td>0.099445</td>
          <td>68</td>
          <td>1</td>
        </tr>
      </tbody>
    </table>
    </div>



.. code:: ipython3

    idx = np.arange(big_df["shifted_pitch"].min(), big_df["shifted_pitch"].max() + 1)
    idx




.. parsed-literal::

    array([-16, -15, -14, -13, -12, -11, -10,  -9,  -8,  -7,  -6,  -5,  -4,
            -3,  -2,  -1,   0,   1,   2,   3,   4,   5,   6,   7,   8,   9,
            10,  11,  12,  13,  14,  15,  16,  17])



.. code:: ipython3

    transitions_df = pd.DataFrame(0, index=idx, columns=idx)
    transitions_df




.. raw:: html

    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }
    
        .dataframe tbody tr th {
            vertical-align: top;
        }
    
        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>-16</th>
          <th>-15</th>
          <th>-14</th>
          <th>-13</th>
          <th>-12</th>
          <th>-11</th>
          <th>-10</th>
          <th>-9</th>
          <th>-8</th>
          <th>-7</th>
          <th>...</th>
          <th>8</th>
          <th>9</th>
          <th>10</th>
          <th>11</th>
          <th>12</th>
          <th>13</th>
          <th>14</th>
          <th>15</th>
          <th>16</th>
          <th>17</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>-16</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>-15</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>-14</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>-13</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>-12</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>-11</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>-10</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>-9</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>-8</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>-7</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>-6</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>-5</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>-4</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>-3</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>-2</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>-1</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>0</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>1</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>2</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>3</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>4</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>5</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>6</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>7</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>8</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>9</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>10</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>11</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>12</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>13</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>14</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>15</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>16</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
        <tr>
          <th>17</th>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>...</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
          <td>0</td>
        </tr>
      </tbody>
    </table>
    <p>34 rows × 34 columns</p>
    </div>



.. code:: ipython3

    %%time
    
    for i, group in big_df.groupby("song_id"):
        for bg in zip(group["shifted_pitch"], group["shifted_pitch"][1:]):
            transitions_df.loc[bg[0],bg[1]] +=1


.. parsed-literal::

    Wall time: 1min 30s
    

.. code:: ipython3

    print(f"There are {transitions_df.sum().sum()} intervals in total in the corpus.")


.. parsed-literal::

    There are 442082 intervals in total in the corpus.
    

.. code:: ipython3

    g = sns.heatmap(transitions_df, cmap="coolwarm", linewidths=.05, square=True)



.. image:: output_44_0.png
   :width: 612px
   :height: 486px


